<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.douzone.HISservice.repository.OutStatusDAO">
    <!--환자 현황 전체 SELECT -->
    <select id="getOutStatus" parameterType="HashMap" resultType="HashMap">
        SELECT c.PATIENT_NAME 'patName', DATE_FORMAT(a.REGISTRATION_TIME,'%H : %i') 'regTime', d.OP_CODE_NAME 'status', a.RECEIVE_ID_PK 'receiveId', c.PATIENT_SSN, a.RECEIVE_ID_PK, c.PATIENT_ID_PK, b.EMP_ID_PK, e.TREATMENT_NUM_PK, b.EMP_NAME, a.SPECIALITY ,e.TREATMENT_DATE,
            a.REGISTRATION_TIME
        FROM RECEIVE_TB AS a
                 LEFT JOIN EMP_INFO_TB AS b ON b.EMP_ID_PK = a.EMP_ID_FK
                 LEFT JOIN PATIENT_TB AS c ON c.PATIENT_ID_PK = a.PATIENT_ID_FK
                 LEFT JOIN OUTPATIENT_STATUS AS d ON d.OUTPATIENT_STATUS_CODE = a.OUTPATIENT_STATUS_CODE
                 LEFT JOIN TREATMENT_INFO_TB AS e ON e.RECEIVE_ID_FK = a.RECEIVE_ID_PK
        WHERE b.EMP_ID_PK = #{EMP_ID_PK}

          AND (d.OUTPATIENT_STATUS_CODE = 'OA' OR d.OUTPATIENT_STATUS_CODE = 'OB' OR d.OUTPATIENT_STATUS_CODE = 'OC' OR d.OUTPATIENT_STATUS_CODE = 'OE')
          AND DATE_FORMAT(a.REGISTRATION_TIME, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
        ORDER BY d.OUTPATIENT_STATUS_CODE, a.REGISTRATION_TIME;
    </select>


    <!--환자 현황 필터 SELECT -->
    <select id="getOutStatusCon" parameterType="HashMap" resultType="HashMap">
        select c.PATIENT_NAME 'patName', DATE_FORMAT(a.REGISTRATION_TIME,'%H : %i') 'regTime', d.OUTPATIENT_STATUS_CODE, d.OP_CODE_NAME 'status', a.RECEIVE_ID_PK 'receiveId', c.PATIENT_SSN, b.EMP_NAME, a.SPECIALITY, a.PATIENT_ID_FK, a.EMP_ID_FK
        from RECEIVE_TB as a
                 left join EMP_INFO_TB as b on b.EMP_ID_PK = a.EMP_ID_FK
                 left join PATIENT_TB as c on c.PATIENT_ID_PK = a.PATIENT_ID_FK
                 left join OUTPATIENT_STATUS as d on d.OUTPATIENT_STATUS_CODE = a.OUTPATIENT_STATUS_CODE
        where b.EMP_ID_PK = #{EMP_ID_PK}

          and d.OUTPATIENT_STATUS_CODE = #{OUTPATIENT_STATUS_CODE}
          and DATE_FORMAT(a.REGISTRATION_TIME, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d');
    </select>



    <!-- 접수 INSERT -->
    <insert id="insertReceiveInfo" parameterType="Map">
        INSERT INTO RECEIVE_TB
        (RECEIVE_ID_PK,
         PATIENT_ID_FK,
         OUTPATIENT_STATUS_CODE,
         EMP_ID_FK,
         SYMPTOM,
         REGISTRATION_TIME,
         SPECIALITY)
        VALUES (#{RECEIVE_ID_PK},
                #{PATIENT_ID_PK},
                'OC',
                #{EMP_ID_PK},
                #{SYMPTOM},
                NOW(),
                #{SPECIALITY});
    </insert>


    <!-- 접수번호 id(R22~~) 찾기 -->
    <select id="getRecentSeq" parameterType="String" resultType="String">
        SELECT RECEIVE_ID_PK
        FROM RECEIVE_TB
        WHERE RECEIVE_ID_PK
                  LIKE
              '${currYr}%'
        ORDER BY RECEIVE_ID_PK
                DESC LIMIT 1;
    </select>


    <!-- 과 별 의사 리스트와 해당 의사들의 환자 현황 SELECT -->
    <select id="getDoctorList" parameterType="HashMap" resultType="HashMap">
        SELECT EMP_NAME, EMP_ID_PK, SPECIALITY_ID_PK, #{OUTPATIENT_STATUS_CODE} OUTPATIENT_STATUS_CODE
        FROM EMP_INFO_TB AS a
        LEFT JOIN SPECIALITY_TB AS b ON b.SPECIALITY_ID_PK = a.SPECIALITY_ID_FK
        WHERE SPECIALITY_ID_FK = #{SPECIALITY_ID_FK}
        AND EMP_ID_PK LIKE 'D%';
    </select>

    <update id="putChangeState" parameterType="HashMap">
        update RECEIVE_TB
        SET  OUTPATIENT_STATUS_CODE = #{status}
        WHERE RECEIVE_ID_PK = #{RECEIVE_ID_PK};
    </update>

    <!-- 의사 개인 환자 현황 리스트 -->
    <select id="getMyPatient" parameterType="String" resultType="HashMap">
        SELECT a.*, b.PATIENT_NAME, SUBSTR(REGISTRATION_TIME,12,5) AS TIME, c.OP_CODE_NAME
        FROM RECEIVE_TB AS a
            LEFT JOIN PATIENT_TB AS b ON a.PATIENT_ID_FK = b.PATIENT_ID_PK
            LEFT JOIN OUTPATIENT_STATUS AS c ON a.OUTPATIENT_STATUS_CODE = c.OUTPATIENT_STATUS_CODE
        WHERE EMP_ID_FK = #{doctorID} AND a.OUTPATIENT_STATUS_CODE != 'OD' AND DATE_FORMAT(a.REGISTRATION_TIME, '%Y%M%D') = DATE_FORMAT(NOW(), '%Y%M%D')
        ORDER BY REGISTRATION_TIME ASC;
    </select>


    <!-- 수납 대기 환자 SELECT -->
    <select id="getWaiting4Receipt" parameterType="HashMap" resultType="HashMap">
        SELECT c.PATIENT_NAME, DATE_FORMAT(a.REGISTRATION_TIME,'%H : %i') 'REGISTRATION_TIME', b.OP_CODE_NAME, c.PATIENT_ID_PK, d.TREATMENT_NUM_PK
        FROM RECEIVE_TB AS a
                 LEFT JOIN OUTPATIENT_STATUS AS b ON b.OUTPATIENT_STATUS_CODE = a.OUTPATIENT_STATUS_CODE
                 LEFT JOIN PATIENT_TB AS c ON c.PATIENT_ID_PK = a.PATIENT_ID_FK
                 LEFT JOIN TREATMENT_INFO_TB AS d ON d.RECEIVE_ID_FK = a.RECEIVE_ID_PK
        WHERE b.OUTPATIENT_STATUS_CODE = 'OD'
          AND DATE_FORMAT(a.REGISTRATION_TIME, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d');
    </select>

    <!-- 수납 SELECT -->
    <select id="getAcceptance" parameterType="HashMap" resultType="HashMap">
        SELECT c.PATIENT_AGE, a.TREATMENT_ORDER, a.MEDICINE, b.SPECIALITY,
               (IF((SELECT COUNT(*) FROM TREATMENT_INFO_TB
                    WHERE PATIENT_ID_FK = #{PATIENT_ID_PK})=0, '초진', '재진')) AS 'VISIT',
                DATE_FORMAT(b.REGISTRATION_TIME, '%H : %i') AS 'REGISTRATION_TIME', c.INSURANCE
        FROM TREATMENT_INFO_TB AS a
                 LEFT JOIN RECEIVE_TB AS b ON b.RECEIVE_ID_PK = a.RECEIVE_ID_FK
                 LEFT JOIN PATIENT_TB AS c ON c.PATIENT_ID_PK = b.PATIENT_ID_FK
        WHERE a.TREATMENT_NUM_PK = #{TREATMENT_NUM_PK};
    </select>


    <!-- 수납 금액 INSERT -->
    <insert id="insertReceipt" parameterType="HashMap">
        INSERT INTO OUTPATIENT_RECEIPT_TB
        (OUTRECEIPT_ID_PK, TREATMENT_NUM_FK, TREAT_COST, INSURANCE_COST, CARE_COST, TIME_COST, PRESCRIPTION_COST, TOTAL_COST)
        VALUES
            (
                (SELECT CONCAT('OR',SUBSTR(NOW(),3,2)*1000000 + 1 + (SELECT COUNT(*) FROM OUTPATIENT_RECEIPT_TB AS a))),
                #{TREATMENT_NUM_FK}, #{TREAT_COST}, #{INSURANCE_COST}, #{CARE_COST}, #{TIME_COST}, #{PRESCRIPTION_COST}, #{TOTAL_COST}
            );
    </insert>


    <!-- 수납 후 환자 상태 UPDATE -->
    <update id="putOutStatus" parameterType="HashMap">
        UPDATE RECEIVE_TB AS a
            LEFT JOIN TREATMENT_INFO_TB AS b ON b.RECEIVE_ID_FK = a.RECEIVE_ID_PK
            SET OUTPATIENT_STATUS_CODE = 'OE'
        WHERE TREATMENT_NUM_PK = #{TREATMENT_NUM_FK}
    </update>


    <!-- 외래 환자 처방전  -->
    <select id="getPrescription"  parameterType="HashMap" resultType="HashMap">
        SELECT b.PATIENT_NAME, b.PATIENT_ID_PK, b.PATIENT_SSN, c.EMP_NAME, c.EMP_TEL, c.EMP_ID_PK,
               d.DIAGNOSIS_CODE, DATE_FORMAT(a.TREATMENT_DATE, '%Y-%m-%d')  AS 'TREATMENT_DATE',
               (
                   SELECT GROUP_CONCAT(b.MEDICINE SEPARATOR '\n')
                   FROM DIAGNOSIS_TB AS a
                            LEFT JOIN MEDICINE_TB AS b ON b.DIAGNOSIS_CODE = a.DIAGNOSIS_CODE
                            LEFT JOIN TREATMENT_INFO_TB AS c ON c.DIAGNOSIS_CODE = a.DIAGNOSIS_CODE
                   WHERE c.TREATMENT_NUM_PK = #{TREATMENT_NUM_PK}
                   GROUP BY a.DIAGNOSIS_CODE
               ) as 'MEDICINE'
        FROM TREATMENT_INFO_TB AS a
                 LEFT JOIN PATIENT_TB AS b ON b.PATIENT_ID_PK = a.PATIENT_ID_FK
                 LEFT JOIN EMP_INFO_TB AS c ON c.EMP_ID_PK = a.EMP_ID_FK
                 LEFT JOIN DIAGNOSIS_TB AS d ON d.DIAGNOSIS_CODE = a.DIAGNOSIS_CODE
                 LEFT JOIN MEDICINE_TB AS e ON e.DIAGNOSIS_CODE = d.DIAGNOSIS_CODE
        WHERE a.TREATMENT_NUM_PK = #{TREATMENT_NUM_PK}
        GROUP BY a.TREATMENT_NUM_PK;
    </select>

</mapper>